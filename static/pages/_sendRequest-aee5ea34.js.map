{"version":3,"file":"_sendRequest-aee5ea34.js","sources":["../../../src/_sendRequest.js"],"sourcesContent":["// TODO: we need to improve substance.sendRequest\n// it does not work well together with the body-parser used by the server\n\n/* global XMLHttpRequest */\nimport { forEach } from 'substance'\n\nexport default function sendRequest (params, cb) {\n  return new Promise(function (resolve, reject) {\n    const method = (params.method || 'GET').toUpperCase()\n    const url = params.url\n    if (['GET', 'POST', 'PUT', 'DELETE'].indexOf(method) < 0) {\n      throw new Error(\"Parameter 'method' must be 'GET', 'POST', 'PUT', or 'DELETE'.\")\n    }\n    if (!url) {\n      throw new Error(\"Parameter 'url' is required.\")\n    }\n    // default content type for requests\n    const header = {}\n    if (params.form) {\n      header['Content-Type'] = 'application/x-www-form-urlencoded'\n    } else if (params.json) {\n      header['Content-Type'] = 'application/json'\n    } else if (params.multiPart) {\n      // TODO: this is somehow fishy\n      // I have tried using 'Content-Type': 'multipart/form-data'\n      // but that resulted in server side parsing error\n      // header['Content-Type'] = 'multipart/form-data'\n    }\n    if (params.header) {\n      Object.assign(header, params.header)\n    }\n    let data = params.data\n    if (params.json) {\n      data = JSON.stringify(data)\n    }\n\n    const xmlhttp = new XMLHttpRequest()\n    xmlhttp.onreadystatechange = function () {\n      // TODO: we could support more states here to give feedback\n      // e.g. about progress of an upload\n      if (xmlhttp.readyState === 4) return _done()\n    }\n    xmlhttp.open(method, url, true)\n    if (header) {\n      forEach(header, function (val, key) {\n        xmlhttp.setRequestHeader(key, val)\n      })\n    }\n    // TODO: this should be changed in substance.sendRequest\n    // i.e. just pass the JSON object as data here\n    // and let the server parse the body accordingly\n    xmlhttp.send(data)\n\n    function _done () {\n      if (xmlhttp.status === 200) {\n        let response = xmlhttp.responseText\n        if (params.json) {\n          response = JSON.parse(response)\n        }\n        if (cb) cb(null, response)\n        resolve(response)\n      } else {\n        console.error(xmlhttp.statusText)\n        const err = new Error(xmlhttp.statusText)\n        if (cb) cb(err)\n        reject(err)\n      }\n    }\n  })\n}\n"],"names":[],"mappings":";;AAAA;AAKA;AACe,SAAS,WAAW,EAAE,MAAM,EAAE,EAAE,EAAE;AACjD,EAAE,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AAChD,IAAI,MAAM,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,IAAI,KAAK,EAAE,WAAW,GAAE;AACzD,IAAI,MAAM,GAAG,GAAG,MAAM,CAAC,IAAG;AAC1B,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;AAC9D,MAAM,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC;AACtF,KAAK;AACL,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,MAAM,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC;AACrD,KAAK;AACL;AACA,IAAI,MAAM,MAAM,GAAG,GAAE;AACrB,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE;AACrB,MAAM,MAAM,CAAC,cAAc,CAAC,GAAG,oCAAmC;AAClE,KAAK,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE;AAC5B,MAAM,MAAM,CAAC,cAAc,CAAC,GAAG,mBAAkB;AACjD,KAAK,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE,CAK5B;AACL,IAAI,IAAI,MAAM,CAAC,MAAM,EAAE;AACvB,MAAM,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAC;AAC1C,KAAK;AACL,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,KAAI;AAC1B,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE;AACrB,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAC;AACjC,KAAK;AACL;AACA,IAAI,MAAM,OAAO,GAAG,IAAI,cAAc,GAAE;AACxC,IAAI,OAAO,CAAC,kBAAkB,GAAG,YAAY;AAC7C;AACA;AACA,MAAM,IAAI,OAAO,CAAC,UAAU,KAAK,CAAC,EAAE,OAAO,KAAK,EAAE;AAClD,MAAK;AACL,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAC;AACnC,IAAI,IAAI,MAAM,EAAE;AAChB,MAAM,OAAO,CAAC,MAAM,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;AAC1C,QAAQ,OAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAC;AAC1C,OAAO,EAAC;AACR,KAAK;AACL;AACA;AACA;AACA,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAC;AACtB;AACA,IAAI,SAAS,KAAK,IAAI;AACtB,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,GAAG,EAAE;AAClC,QAAQ,IAAI,QAAQ,GAAG,OAAO,CAAC,aAAY;AAC3C,QAAQ,IAAI,MAAM,CAAC,IAAI,EAAE;AACzB,UAAU,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAC;AACzC,SAAS;AACT,QAAQ,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAC;AAClC,QAAQ,OAAO,CAAC,QAAQ,EAAC;AACzB,OAAO,MAAM;AACb,QAAQ,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,EAAC;AACzC,QAAQ,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,EAAC;AACjD,QAAQ,IAAI,EAAE,EAAE,EAAE,CAAC,GAAG,EAAC;AACvB,QAAQ,MAAM,CAAC,GAAG,EAAC;AACnB,OAAO;AACP,KAAK;AACL,GAAG,CAAC;AACJ;;;;"}